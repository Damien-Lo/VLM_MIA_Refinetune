/local/scratch/clo37/anaconda3/envs/vlm_large_mia_llava_venv/lib/python3.10/site-packages/hydra/_internal/defaults_list.py:251: UserWarning: In 'run_img': Defaults list is missing `_self_`. See https://hydra.cc/docs/1.2/upgrades/1.0_to_1.1/default_composition_order for more information
  warnings.warn(msg, UserWarning)
/home/clo37/.local/lib/python3.10/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
You are using a model of type llava to instantiate a model of type llava_llama. This is not supported for all configurations of models and can yield errors.

          
 

          ==================================================
                            STARTING RUN 
          ==================================================
          
 

          
Full Config Paramters:
{'data': {'dataset': 'JaineLi/VL-MIA-image', 'subset': 'img_Flickr', 'split': 'train', 'augmentations': {'RandomResize': {'use': True, 'size': [[256, 256], [256, 256], [256, 256], [256, 256], [256, 256], [256, 256], [256, 256], [256, 256]], 'scale': [[0.1, 0.1], [0.2, 0.2], [0.3, 0.3], [0.4, 0.4], [0.5, 0.5], [0.6, 0.6], [0.7, 0.7], [0.8, 0.8]], 'ratio': [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]}, 'RandomRotation': {'use': False, 'degrees': [0.1, 0.2, 0.3, 0.4, 0.5, 5, 30, 45, 60, 90]}, 'RandomAffine': {'use': False, 'degrees': [30], 'translate': [[0.1, 0.1]], 'scale': [[0.75, 1.25]]}, 'ColorJitter': {'use': False, 'brightness': [0.5], 'contrast': [0.5], 'saturation': [0.5], 'hue': [0.5]}, 'GaussianNoise': {'use': False, 'mean': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'std': [100.0, 250.0, 500.0, 750.0, 1000.0, 2500.0, 5000.0]}}}, 'target_model': {'model_path': 'liuhaotian/llava-v1.5-7b', 'model_base': None, 'conv_mode': 'llava_v1', 'gpu_id': 0}, 'reference_model': {'model_path': 'liuhaotian/llava-v1.5-7b', 'model_base': 'llava-v1.5-7b', 'conv_mode': 'llava_v1'}, 'generation': {'use_augmentation': False, 'batch_size': 8, 'num_gen_tokens': 32}, 'inference': {'use_augmentation': True, 'batch_size': 8, 'test_number_of_batches': 5}, 'img_metrics': {'aug_kld': {'name': 'aug_kl_divs'}, 'max_k_renyi_1_entro': {'name': 'max_k_renyi_1_ratio', 'suffix': 'renyi_1', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, 'max_k_renyi_2_entro': {'name': 'max_k_renyi_2_ratio', 'alpha': 2, 'suffix': 'renyi_2', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, 'max_k_renyi_05_entro': {'name': 'max_k_renyi_05_ratio', 'alpha': 0.5, 'suffix': 'renyi_05', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, 'max_prob_gap': {'name': 'max_prob_gap'}, 'min_k_renyi_1_entro': {'name': 'min_k_renyi_1_ratio', 'suffix': 'renyi_1', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, 'min_k_renyi_2_entro': {'name': 'min_k_renyi_2_ratio', 'alpha': 2, 'suffix': 'renyi_2', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, 'min_k_renyi_05_entro': {'name': 'min_k_renyi_05_ratio', 'alpha': 0.5, 'suffix': 'renyi_05', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, 'mink': {'name': 'mink', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, 'mod_renyi_1_entro': {'name': 'modified_entropy'}, 'mod_renyi_2_entro': {'name': 'modified_renyi_2', 'alpha': 2}, 'mod_renyi_05_entro': {'name': 'modified_reny_0.5', 'alpha': 0.5}, 'renyi_1': {'name': 'renyi_1'}, 'renyi_2': {'name': 'renyi_2', 'alpha': 2}, 'renyi_05': {'name': 'renyi_0.5', 'alpha': 2}, 'renyi_05_full': {'name': 'renyi_05_full'}, 'cross_entropy_mink': {'name': 'cross_entropy_mink', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, 'min_k_renyi_05_kl_div': {'name': 'min_k_renyi_05_kl_div', 'alpha': 0.5, 'suffix': 'renyi_05', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'augmentation_accumilator': ['avg', 'max', 'none'], 'augmentation_setting_version_accumilator': ['avg', 'max', 'none']}, 'min_k_renyi_1_kl_div': {'name': 'min_k_renyi_05_kl_div', 'alpha': 1, 'suffix': 'renyi_1', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'augmentation_accumilator': ['avg', 'max', 'none'], 'augmentation_setting_version_accumilator': ['avg', 'max', 'none']}, 'min_k_renyi_2_kl_div': {'name': 'min_k_renyi_05_kl_div', 'alpha': 2, 'suffix': 'renyi_2', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'augmentation_accumilator': ['avg', 'max', 'none'], 'augmentation_setting_version_accumilator': ['avg', 'max', 'none']}, 'min_k_renyi_inf_kl_div': {'name': 'min_k_renyi_inf_kl_div', 'suffix': 'renyi_inf', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'augmentation_accumilator': ['avg', 'max', 'none'], 'augmentation_setting_version_accumilator': ['avg', 'max', 'none']}, 'min_k_renyi_divergence_025': {'name': 'min_k_renyi_divergence_025', 'alpha': 0.25, 'suffix': 'renyi_025', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'augmentation_accumilator': ['avg', 'max', 'none'], 'augmentation_setting_version_accumilator': ['avg', 'max', 'none']}, 'min_k_renyi_divergence_05': {'name': 'min_k_renyi_divergence_05', 'alpha': 0.5, 'suffix': 'renyi_05', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'augmentation_accumilator': ['avg', 'max', 'none'], 'augmentation_setting_version_accumilator': ['avg', 'max', 'none']}, 'min_k_renyi_divergence_2': {'name': 'min_k_renyi_divergence_2', 'alpha': 2, 'suffix': 'renyi_2', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'augmentation_accumilator': ['avg', 'max', 'none'], 'augmentation_setting_version_accumilator': ['avg', 'max', 'none']}, 'min_k_renyi_divergence_4': {'name': 'min_k_renyi_divergence_4', 'alpha': 4, 'suffix': 'renyi_4', 'ratio': [0, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'augmentation_accumilator': ['avg', 'max', 'none'], 'augmentation_setting_version_accumilator': ['avg', 'max', 'none']}, 'metrics_to_use': ['min_k_renyi_05_kl_div', 'min_k_renyi_1_kl_div', 'min_k_renyi_2_kl_div', 'min_k_renyi_inf_kl_div', 'min_k_renyi_divergence_025', 'min_k_renyi_divergence_05', 'min_k_renyi_divergence_2', 'min_k_renyi_divergence_4'], 'parts': ['img'], 'get_token_labels': 1000, 'get_raw_images': 5, 'get_raw_meta_examples': 1000, 'get_raw_meta_metrics': ['losses'], 'get_proc_meta_examples': 1000, 'get_proc_meta_metrics': ['min_k_renyi_05_kl_div_tkn_vals', 'min_k_renyi_1_kl_div_tkn_vals', 'min_k_renyi_2_kl_div_tkn_vals', 'min_k_renyi_inf_kl_div_tkn_vals', 'min_k_renyi_divergence_025_tkn_vals', 'min_k_renyi_divergence_05_tkn_vals', 'min_k_renyi_divergence_4_tkn_vals']}, 'prompt': {'text': 'Describe this image concisely.'}, 'path': {'cache_dir': '/local/scratch/clo37/cache', 'output_dir': '/local/scratch/clo37/VLM_MIA_STUDY_Archive_Data/LatestResults/full_results/randresizecrop_scale_set2'}, 'wandb': {'project': 'vlm_mia', 'name': 'run_001', 'mode': 'enabled'}, 'test_run': {'test_run': False}}


AUGMENTATIONS USED:
{'RandomResize': {'use': True, 'size': [[256, 256], [256, 256], [256, 256], [256, 256], [256, 256], [256, 256], [256, 256], [256, 256]], 'scale': [[0.1, 0.1], [0.2, 0.2], [0.3, 0.3], [0.4, 0.4], [0.5, 0.5], [0.6, 0.6], [0.7, 0.7], [0.8, 0.8]], 'ratio': [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]}, 'RandomRotation': {'use': False, 'degrees': [0.1, 0.2, 0.3, 0.4, 0.5, 5, 30, 45, 60, 90]}, 'RandomAffine': {'use': False, 'degrees': [30], 'translate': [[0.1, 0.1]], 'scale': [[0.75, 1.25]]}, 'ColorJitter': {'use': False, 'brightness': [0.5], 'contrast': [0.5], 'saturation': [0.5], 'hue': [0.5]}, 'GaussianNoise': {'use': False, 'mean': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'std': [100.0, 250.0, 500.0, 750.0, 1000.0, 2500.0, 5000.0]}}

REQUESTED DATA
Requested token labels of first 1000 of each class
Requested Raw Augmented Images of first 5 of each class
Requested metrics: ['losses'] of first 1000 of each class
Requested metrics: ['min_k_renyi_05_kl_div_tkn_vals', 'min_k_renyi_1_kl_div_tkn_vals', 'min_k_renyi_2_kl_div_tkn_vals', 'min_k_renyi_inf_kl_div_tkn_vals', 'min_k_renyi_divergence_025_tkn_vals', 'min_k_renyi_divergence_05_tkn_vals', 'min_k_renyi_divergence_4_tkn_vals'] of first 1000 of each class

          
 

          ==================================================
                            LOADING MODEL
          ==================================================
          
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]/local/scratch/clo37/anaconda3/envs/vlm_large_mia_llava_venv/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()
Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  5.66it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  7.35it/s]

          
 

          ==================================================
                            PREPARING DATA
          ==================================================
          
 

          
Generating Inference and Augmentations.....
Raw Image Indecies: [ 0  1  2  3  4  5  6  8  9 12]
Map:   0%|          | 0/600 [00:00<?, ? examples/s]Map: 100%|██████████| 600/600 [01:59<00:00,  5.01 examples/s]Map: 100%|██████████| 600/600 [02:06<00:00,  4.73 examples/s]
Appended Desired Sample
Appended Desired Sample
Appended Desired Sample
Appended Desired Sample
Appended Desired Sample
Appended Desired Sample
Appended Desired Sample
Appended Desired Sample
Appended Desired Sample
Appended Desired Sample
Completed. Tokens Acquired
Raw Meta values sampled Indecies: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485
 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503
 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521
 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539
 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557
 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575
 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593
 594 595 596 597 598 599]
Processed Meta values sampled Indecies: [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107
 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161
 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269
 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287
 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341
 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377
 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431
 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449
 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467
 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485
 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503
 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521
 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539
 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557
 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575
 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593
 594 595 596 597 598 599]

          
 

          ==================================================
                    SAVING RAW IMAGES TENSORS.....
          ==================================================
          
 

          
Saved orig_image_tensors to /local/scratch/clo37/VLM_MIA_STUDY_Archive_Data/LatestResults/full_results/randresizecrop_scale_set2/orig_image_tensors.pt
Saved aug_image_tensors to /local/scratch/clo37/VLM_MIA_STUDY_Archive_Data/LatestResults/full_results/randresizecrop_scale_set2/aug_image_tensors.pt
RAW IMAGE SAVE COMPLETE
Saved image_sampled_indicies to /local/scratch/clo37/VLM_MIA_STUDY_Archive_Data/LatestResults/full_results/randresizecrop_scale_set2/image_sampled_indicies.json

          
 

          ==================================================
                        BEGINNING INFERENCE
          ==================================================
          
 

          
Proc Meta Sample Map: defaultdict(<class 'list'>, {0: [0, 1, 2, 3, 4, 5, 6, 7], 1: [0, 1, 2, 3, 4, 5, 6, 7], 2: [0, 1, 2, 3, 4, 5, 6, 7], 3: [0, 1, 2, 3, 4, 5, 6, 7], 4: [0, 1, 2, 3, 4, 5, 6, 7], 5: [0, 1, 2, 3, 4, 5, 6, 7], 6: [0, 1, 2, 3, 4, 5, 6, 7], 7: [0, 1, 2, 3, 4, 5, 6, 7], 8: [0, 1, 2, 3, 4, 5, 6, 7], 9: [0, 1, 2, 3, 4, 5, 6, 7], 10: [0, 1, 2, 3, 4, 5, 6, 7], 11: [0, 1, 2, 3, 4, 5, 6, 7], 12: [0, 1, 2, 3, 4, 5, 6, 7], 13: [0, 1, 2, 3, 4, 5, 6, 7], 14: [0, 1, 2, 3, 4, 5, 6, 7], 15: [0, 1, 2, 3, 4, 5, 6, 7], 16: [0, 1, 2, 3, 4, 5, 6, 7], 17: [0, 1, 2, 3, 4, 5, 6, 7], 18: [0, 1, 2, 3, 4, 5, 6, 7], 19: [0, 1, 2, 3, 4, 5, 6, 7], 20: [0, 1, 2, 3, 4, 5, 6, 7], 21: [0, 1, 2, 3, 4, 5, 6, 7], 22: [0, 1, 2, 3, 4, 5, 6, 7], 23: [0, 1, 2, 3, 4, 5, 6, 7], 24: [0, 1, 2, 3, 4, 5, 6, 7], 25: [0, 1, 2, 3, 4, 5, 6, 7], 26: [0, 1, 2, 3, 4, 5, 6, 7], 27: [0, 1, 2, 3, 4, 5, 6, 7], 28: [0, 1, 2, 3, 4, 5, 6, 7], 29: [0, 1, 2, 3, 4, 5, 6, 7], 30: [0, 1, 2, 3, 4, 5, 6, 7], 31: [0, 1, 2, 3, 4, 5, 6, 7], 32: [0, 1, 2, 3, 4, 5, 6, 7], 33: [0, 1, 2, 3, 4, 5, 6, 7], 34: [0, 1, 2, 3, 4, 5, 6, 7], 35: [0, 1, 2, 3, 4, 5, 6, 7], 36: [0, 1, 2, 3, 4, 5, 6, 7], 37: [0, 1, 2, 3, 4, 5, 6, 7], 38: [0, 1, 2, 3, 4, 5, 6, 7], 39: [0, 1, 2, 3, 4, 5, 6, 7], 40: [0, 1, 2, 3, 4, 5, 6, 7], 41: [0, 1, 2, 3, 4, 5, 6, 7], 42: [0, 1, 2, 3, 4, 5, 6, 7], 43: [0, 1, 2, 3, 4, 5, 6, 7], 44: [0, 1, 2, 3, 4, 5, 6, 7], 45: [0, 1, 2, 3, 4, 5, 6, 7], 46: [0, 1, 2, 3, 4, 5, 6, 7], 47: [0, 1, 2, 3, 4, 5, 6, 7], 48: [0, 1, 2, 3, 4, 5, 6, 7], 49: [0, 1, 2, 3, 4, 5, 6, 7], 50: [0, 1, 2, 3, 4, 5, 6, 7], 51: [0, 1, 2, 3, 4, 5, 6, 7], 52: [0, 1, 2, 3, 4, 5, 6, 7], 53: [0, 1, 2, 3, 4, 5, 6, 7], 54: [0, 1, 2, 3, 4, 5, 6, 7], 55: [0, 1, 2, 3, 4, 5, 6, 7], 56: [0, 1, 2, 3, 4, 5, 6, 7], 57: [0, 1, 2, 3, 4, 5, 6, 7], 58: [0, 1, 2, 3, 4, 5, 6, 7], 59: [0, 1, 2, 3, 4, 5, 6, 7], 60: [0, 1, 2, 3, 4, 5, 6, 7], 61: [0, 1, 2, 3, 4, 5, 6, 7], 62: [0, 1, 2, 3, 4, 5, 6, 7], 63: [0, 1, 2, 3, 4, 5, 6, 7], 64: [0, 1, 2, 3, 4, 5, 6, 7], 65: [0, 1, 2, 3, 4, 5, 6, 7], 66: [0, 1, 2, 3, 4, 5, 6, 7], 67: [0, 1, 2, 3, 4, 5, 6, 7], 68: [0, 1, 2, 3, 4, 5, 6, 7], 69: [0, 1, 2, 3, 4, 5, 6, 7], 70: [0, 1, 2, 3, 4, 5, 6, 7], 71: [0, 1, 2, 3, 4, 5, 6, 7], 72: [0, 1, 2, 3, 4, 5, 6, 7], 73: [0, 1, 2, 3, 4, 5, 6, 7], 74: [0, 1, 2, 3, 4, 5, 6, 7]})
Raw Meta Sample Map: defaultdict(<class 'list'>, {0: [0, 1, 2, 3, 4, 5, 6, 7], 1: [0, 1, 2, 3, 4, 5, 6, 7], 2: [0, 1, 2, 3, 4, 5, 6, 7], 3: [0, 1, 2, 3, 4, 5, 6, 7], 4: [0, 1, 2, 3, 4, 5, 6, 7], 5: [0, 1, 2, 3, 4, 5, 6, 7], 6: [0, 1, 2, 3, 4, 5, 6, 7], 7: [0, 1, 2, 3, 4, 5, 6, 7], 8: [0, 1, 2, 3, 4, 5, 6, 7], 9: [0, 1, 2, 3, 4, 5, 6, 7], 10: [0, 1, 2, 3, 4, 5, 6, 7], 11: [0, 1, 2, 3, 4, 5, 6, 7], 12: [0, 1, 2, 3, 4, 5, 6, 7], 13: [0, 1, 2, 3, 4, 5, 6, 7], 14: [0, 1, 2, 3, 4, 5, 6, 7], 15: [0, 1, 2, 3, 4, 5, 6, 7], 16: [0, 1, 2, 3, 4, 5, 6, 7], 17: [0, 1, 2, 3, 4, 5, 6, 7], 18: [0, 1, 2, 3, 4, 5, 6, 7], 19: [0, 1, 2, 3, 4, 5, 6, 7], 20: [0, 1, 2, 3, 4, 5, 6, 7], 21: [0, 1, 2, 3, 4, 5, 6, 7], 22: [0, 1, 2, 3, 4, 5, 6, 7], 23: [0, 1, 2, 3, 4, 5, 6, 7], 24: [0, 1, 2, 3, 4, 5, 6, 7], 25: [0, 1, 2, 3, 4, 5, 6, 7], 26: [0, 1, 2, 3, 4, 5, 6, 7], 27: [0, 1, 2, 3, 4, 5, 6, 7], 28: [0, 1, 2, 3, 4, 5, 6, 7], 29: [0, 1, 2, 3, 4, 5, 6, 7], 30: [0, 1, 2, 3, 4, 5, 6, 7], 31: [0, 1, 2, 3, 4, 5, 6, 7], 32: [0, 1, 2, 3, 4, 5, 6, 7], 33: [0, 1, 2, 3, 4, 5, 6, 7], 34: [0, 1, 2, 3, 4, 5, 6, 7], 35: [0, 1, 2, 3, 4, 5, 6, 7], 36: [0, 1, 2, 3, 4, 5, 6, 7], 37: [0, 1, 2, 3, 4, 5, 6, 7], 38: [0, 1, 2, 3, 4, 5, 6, 7], 39: [0, 1, 2, 3, 4, 5, 6, 7], 40: [0, 1, 2, 3, 4, 5, 6, 7], 41: [0, 1, 2, 3, 4, 5, 6, 7], 42: [0, 1, 2, 3, 4, 5, 6, 7], 43: [0, 1, 2, 3, 4, 5, 6, 7], 44: [0, 1, 2, 3, 4, 5, 6, 7], 45: [0, 1, 2, 3, 4, 5, 6, 7], 46: [0, 1, 2, 3, 4, 5, 6, 7], 47: [0, 1, 2, 3, 4, 5, 6, 7], 48: [0, 1, 2, 3, 4, 5, 6, 7], 49: [0, 1, 2, 3, 4, 5, 6, 7], 50: [0, 1, 2, 3, 4, 5, 6, 7], 51: [0, 1, 2, 3, 4, 5, 6, 7], 52: [0, 1, 2, 3, 4, 5, 6, 7], 53: [0, 1, 2, 3, 4, 5, 6, 7], 54: [0, 1, 2, 3, 4, 5, 6, 7], 55: [0, 1, 2, 3, 4, 5, 6, 7], 56: [0, 1, 2, 3, 4, 5, 6, 7], 57: [0, 1, 2, 3, 4, 5, 6, 7], 58: [0, 1, 2, 3, 4, 5, 6, 7], 59: [0, 1, 2, 3, 4, 5, 6, 7], 60: [0, 1, 2, 3, 4, 5, 6, 7], 61: [0, 1, 2, 3, 4, 5, 6, 7], 62: [0, 1, 2, 3, 4, 5, 6, 7], 63: [0, 1, 2, 3, 4, 5, 6, 7], 64: [0, 1, 2, 3, 4, 5, 6, 7], 65: [0, 1, 2, 3, 4, 5, 6, 7], 66: [0, 1, 2, 3, 4, 5, 6, 7], 67: [0, 1, 2, 3, 4, 5, 6, 7], 68: [0, 1, 2, 3, 4, 5, 6, 7], 69: [0, 1, 2, 3, 4, 5, 6, 7], 70: [0, 1, 2, 3, 4, 5, 6, 7], 71: [0, 1, 2, 3, 4, 5, 6, 7], 72: [0, 1, 2, 3, 4, 5, 6, 7], 73: [0, 1, 2, 3, 4, 5, 6, 7], 74: [0, 1, 2, 3, 4, 5, 6, 7]})
Running inference:   0%|          | 0/75 [00:00<?, ?batch/s]Running inference:   1%|▏         | 1/75 [05:02<6:13:40, 302.98s/batch]Running inference:   3%|▎         | 2/75 [08:46<5:11:37, 256.13s/batch]Running inference:   4%|▍         | 3/75 [12:00<4:33:14, 227.70s/batch]Running inference:   5%|▌         | 4/75 [15:02<4:08:18, 209.84s/batch]Running inference:   7%|▋         | 5/75 [18:17<3:58:21, 204.31s/batch]Running inference:   8%|▊         | 6/75 [21:15<3:44:57, 195.61s/batch]Running inference:   9%|▉         | 7/75 [24:31<3:41:40, 195.59s/batch]Running inference:  11%|█         | 8/75 [27:33<3:33:29, 191.18s/batch]Running inference:  12%|█▏        | 9/75 [30:49<3:31:53, 192.64s/batch]Running inference:  13%|█▎        | 10/75 [33:51<3:25:26, 189.63s/batch]Running inference:  15%|█▍        | 11/75 [37:07<3:24:12, 191.45s/batch]Running inference:  16%|█▌        | 12/75 [40:13<3:19:14, 189.75s/batch]Running inference:  17%|█▋        | 13/75 [43:27<3:17:30, 191.14s/batch]Running inference:  19%|█▊        | 14/75 [46:30<3:11:40, 188.53s/batch]Running inference:  20%|██        | 15/75 [49:46<3:10:51, 190.86s/batch]Running inference:  21%|██▏       | 16/75 [52:51<3:05:52, 189.02s/batch]Running inference:  23%|██▎       | 17/75 [56:06<3:04:36, 190.98s/batch]Running inference:  24%|██▍       | 18/75 [59:08<2:58:56, 188.36s/batch]Running inference:  25%|██▌       | 19/75 [1:02:22<2:57:18, 189.97s/batch]Running inference:  27%|██▋       | 20/75 [1:05:25<2:52:09, 187.82s/batch]Running inference:  28%|██▊       | 21/75 [1:08:39<2:50:35, 189.55s/batch]Running inference:  29%|██▉       | 22/75 [1:11:42<2:45:40, 187.56s/batch]Running inference:  31%|███       | 23/75 [1:14:57<2:44:30, 189.81s/batch]Running inference:  32%|███▏      | 24/75 [1:17:59<2:39:34, 187.74s/batch]Running inference:  33%|███▎      | 25/75 [1:21:14<2:38:07, 189.76s/batch]Running inference:  35%|███▍      | 26/75 [1:24:17<2:33:18, 187.73s/batch]Running inference:  36%|███▌      | 27/75 [1:27:31<2:31:38, 189.55s/batch]Running inference:  37%|███▋      | 28/75 [1:30:34<2:27:04, 187.75s/batch]Running inference:  39%|███▊      | 29/75 [1:33:47<2:25:11, 189.37s/batch]Running inference:  40%|████      | 30/75 [1:36:50<2:20:35, 187.46s/batch]Running inference:  41%|████▏     | 31/75 [1:40:04<2:18:42, 189.14s/batch]Running inference:  43%|████▎     | 32/75 [1:43:02<2:13:17, 185.98s/batch]Running inference:  44%|████▍     | 33/75 [1:46:16<2:11:51, 188.36s/batch]Running inference:  45%|████▌     | 34/75 [1:49:18<2:07:22, 186.41s/batch]Running inference:  47%|████▋     | 35/75 [1:52:41<2:07:40, 191.50s/batch]Running inference:  48%|████▊     | 36/75 [1:55:45<2:03:00, 189.25s/batch]Running inference:  49%|████▉     | 37/75 [1:59:03<2:01:24, 191.70s/batch]Running inference:  51%|█████     | 38/75 [2:02:08<1:56:59, 189.73s/batch]Running inference:  52%|█████▏    | 39/75 [2:05:22<1:54:32, 190.91s/batch]Running inference:  53%|█████▎    | 40/75 [2:08:26<1:50:19, 189.12s/batch]Running inference:  55%|█████▍    | 41/75 [2:11:42<1:48:13, 190.99s/batch]Running inference:  56%|█████▌    | 42/75 [2:14:48<1:44:12, 189.46s/batch]Running inference:  57%|█████▋    | 43/75 [2:18:01<1:41:44, 190.77s/batch]Running inference:  59%|█████▊    | 44/75 [2:21:08<1:37:54, 189.48s/batch]Running inference:  60%|██████    | 45/75 [2:24:23<1:35:32, 191.10s/batch]Running inference:  61%|██████▏   | 46/75 [2:27:27<1:31:21, 189.02s/batch]Running inference:  63%|██████▎   | 47/75 [2:30:44<1:29:22, 191.53s/batch]Running inference:  64%|██████▍   | 48/75 [2:33:48<1:25:10, 189.29s/batch]Running inference:  65%|██████▌   | 49/75 [2:37:05<1:23:00, 191.55s/batch]Running inference:  67%|██████▋   | 50/75 [2:40:10<1:18:57, 189.48s/batch]Running inference:  68%|██████▊   | 51/75 [2:43:24<1:16:17, 190.71s/batch]Running inference:  69%|██████▉   | 52/75 [2:46:27<1:12:17, 188.57s/batch]Running inference:  71%|███████   | 53/75 [2:49:43<1:10:00, 190.91s/batch]Running inference:  72%|███████▏  | 54/75 [2:52:47<1:06:01, 188.66s/batch]Running inference:  73%|███████▎  | 55/75 [2:56:03<1:03:38, 190.90s/batch]Running inference:  75%|███████▍  | 56/75 [2:59:10<1:00:02, 189.62s/batch]Running inference:  76%|███████▌  | 57/75 [3:02:25<57:25, 191.39s/batch]  Running inference:  77%|███████▋  | 58/75 [3:05:28<53:28, 188.76s/batch]